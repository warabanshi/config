" An example for a vimrc file.
"
" Maintainer:   Bram Moolenaar <Bram@vim.org>
" Last change:  2002 Sep 19
"
" To use it, copy it to
"     for Unix and OS/2:  ~/.vimrc
"         for Amiga:  s:.vimrc
"  for MS-DOS and Win32:  $VIM\_vimrc
"       for OpenVMS:  sys$login:.vimrc
" When started as "evim", evim.vim will already have done these settings.
if v:progname =~? "evim"
  finish
endif

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

if has("vms")
  set nobackup      " do not keep a backup file, use versions instead
else
  set backup        " keep a backup file
endif
set history=50      " keep 50 lines of command line history
set ruler       " show the cursor position all the time
set showcmd     " display incomplete commands
set incsearch       " do incremental searching

" For Win32 GUI: remove 't' flag from 'guioptions': no tearoff menu entries
" let &guioptions = substitute(&guioptions, "t", "", "g")

" Don't use Ex mode, use Q for formatting
map Q gq

" This is an alternative that also works in block mode, but the deleted
" text is lost and it only works for putting the current register.
"vnoremap p "_dp

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Only do this part when compiled with support for autocommands.
if has("autocmd")

  " Enable file type detection.
  " Use the default filetype settings, so that mail gets 'tw' set to 72,
  " 'cindent' is on in C files, etc.
  " Also load indent files, to automatically do language-dependent indenting.
  filetype plugin indent on

  " Put these in an autocmd group, so that we can delete them easily.
  augroup vimrcEx
  au!

  " For all text files set 'textwidth' to 78 characters.
  autocmd FileType text setlocal textwidth=78

  " When editing a file, always jump to the last known cursor position.
  " Don't do it when the position is invalid or when inside an event handler
  " (happens when dropping a file on gvim).
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

  augroup END

else

  set autoindent        " always set autoindenting on

endif " has("autocmd")

" ファイルの漢字コード自動判別のために必要。(要iconv)
 if has('iconv')
   set fileencodings&
   set fileencodings+=ucs-2le,ucs-2
   let s:enc_euc = 'euc-jp'
   let s:enc_jis = 'iso-2022-jp'
"   " iconvがJISX0213に対応しているかをチェック -- Unix 用の iconv.dll の実装に差があるため
   if iconv("\x87\x64\x87\x6a", 'cp932', 'euc-jisx0213') ==# "\xad\xc5\xad\xcb"
     let s:enc_euc = 'euc-jisx0213,euc-jp'
     let s:enc_jis = 'iso-2022-jp-3'
   endif
"   " fileencodingsを構築
   let &fileencodings = &fileencodings.','.s:enc_jis.',utf-8' "JIS を加える
   if &encoding =~# '^euc-\%(jp\|jisx0213\)$'            "UNIXでは SJIS を加える
     set fileencodings+=cp932
     let &encoding = s:enc_euc
   else
     let &fileencodings = &fileencodings.','.s:enc_euc  "Windowsでは EUC を加える
   endif
"   " 定数を処分
   unlet s:enc_euc
   unlet s:enc_jis
 endif


colorscheme torte
set enc=utf-8
set fenc=utf-8
set ambiwidth=double
set lines=60
set columns=120
set nu
set ts=4 sw=4
set expandtab
set fileformats=unix,dos,mac
set nobackup
:source $VIMRUNTIME/macros/matchit.vim

autocmd BufRead *.as set filetype=actionscript
set smartindent
